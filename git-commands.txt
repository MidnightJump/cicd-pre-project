# Git 分支管理快速命令

## 🚀 快速开始
# 1. 初始化分支策略
git checkout main
git checkout -b develop
git push -u origin develop

## 📱 功能开发 (feature/*)
# 创建功能分支
git checkout develop
git pull origin develop
git checkout -b feature/user-auth
git push -u origin feature/user-auth

# 完成后合并
git checkout develop
git pull origin develop
git merge --no-ff feature/user-auth
git push origin develop
git branch -d feature/user-auth
git push origin --delete feature/user-auth

## 🔥 紧急修复 (hotfix/*)
# 创建热修复分支
git checkout main
git pull origin main
git checkout -b hotfix/critical-bug
git push -u origin hotfix/critical-bug

# 合并到main和develop
git checkout main
git merge --no-ff hotfix/critical-bug
git push origin main
git checkout develop
git merge --no-ff hotfix/critical-bug
git push origin develop
git branch -d hotfix/critical-bug
git push origin --delete hotfix/critical-bug

## 🎯 版本发布 (release/*)
# 创建发布分支
git checkout develop
git pull origin develop
git checkout -b release/1.0.0
git push -u origin release/1.0.0

# 发布到main并打标签
git checkout main
git merge --no-ff release/1.0.0
git tag -a v1.0.0 -m "Release version 1.0.0"
git push origin main
git push origin v1.0.0
git checkout develop
git merge --no-ff release/1.0.0
git push origin develop
git branch -d release/1.0.0
git push origin --delete release/1.0.0

## 🛠️ 脚本使用
chmod +x git-branch-setup.sh
./git-branch-setup.sh

## 🔍 查看状态
git branch -a                    # 查看所有分支
git log --oneline --graph --all  # 查看分支图形
git tag -l                       # 查看所有标签 